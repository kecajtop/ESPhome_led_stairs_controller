substitutions:
  device_name: "pca9685"
  friendly_name: pca9685
  upper_devicename: pca9685
  key: !secret key_pca9685
  ota: !secret ota_pca9685
  IP: !secret IP_pca9685
  fallback_pass: !secret fallback_pass_pca9685
  wifi_ssid: !secret wifi_ssid
  wifi_password: !secret wifi_password
  wifi_ssid_ha: !secret wifi_ssid_ha
  wifi_password_ha: !secret wifi_password_ha
  timezone_ha: !secret timezone_ha
  log_level: DEBUG

packages:
  wifi: !include common/wifi.yaml
  device_base: !include common/device_base.yaml
  generic: !include common/generic.yaml

esphome:
  name: $device_name

esp32:
  board: esp32dev
  framework:
    type: arduino

web_server:
  port: 80

mcp23008:
  - id: 'mcp23008_hub'
    address: 0x20

i2c:
  sda: GPIO21
  scl: GPIO22

captive_portal:

# Example configuration entry
pca9685:
  - id: pca9685_1 
    frequency: 1000
    address: 0x40

# Individual outputs
output:
  - platform: pca9685
    channel: 0
    id: pca00
  - platform: pca9685
    channel: 1
    id: pca01
  - platform: pca9685
    channel: 2
    id: pca02
  - platform: pca9685
    channel: 3
    id: pca03
  - platform: pca9685
    channel: 4
    id: pca04
  - platform: pca9685
    channel: 5
    id: pca05
  - platform: pca9685
    channel: 6
    id: pca06
  - platform: pca9685
    channel: 7
    id: pca07
  - platform: pca9685
    channel: 8
    id: pca08
  - platform: pca9685
    channel: 9
    id: pca09
  - platform: pca9685
    channel: 10
    id: pca10
  - platform: pca9685
    channel: 11
    id: pca11
  - platform: pca9685
    channel: 12
    id: pca12
  - platform: pca9685
    channel: 13
    id: pca13
  - platform: pca9685
    channel: 14
    id: pca14
  - platform: pca9685
    channel: 15
    id: pca15

light:
  - platform: partition
    name: "Partition Light"
    segments:
      - single_light_id: pwm00
      - single_light_id: pwm01
      - single_light_id: pwm02
      - single_light_id: pwm03
      - single_light_id: pwm04
      - single_light_id: pwm05
      - single_light_id: pwm06
      - single_light_id: pwm07
      - single_light_id: pwm08
      - single_light_id: pwm09
      - single_light_id: pwm10
      - single_light_id: pwm11
      - single_light_id: pwm12
      - single_light_id: pwm13
      - single_light_id: pwm14
      - single_light_id: pwm15
    effects:                      
      - addressable_lambda:
          name: "Falling light"
          update_interval: 1000ms
          lambda: |-
            static auto TAG = "Falling light";
            static uint16_t progress = 0;
            static ESPHSVColor mYellow = ESPHSVColor(0, 0, 255);
            if (initial_run) {
              progress = 0;
              it.all() = Color::BLACK;
              ESP_LOGD(TAG, "initial run");
              ESP_LOGD(TAG, "it.size() =  %d", it.size());
            }
            else {
              //yellow led appear at start of strip and falling down
              if (progress < it.size()) {
                it[progress] = mYellow;
                progress++;
                ESP_LOGD(TAG, "increas progress : %d", progress);
              }
              //when all leds get yellow light, do nothing
              else {
                }
            };
      
      - addressable_lambda:
          name: "Rise light"
          update_interval: 1000ms
          lambda: |-
            static auto TAG = "Rise light";
            static uint16_t progress = 0;
            static ESPHSVColor mYellow = ESPHSVColor(0, 0, 255);
            if (initial_run) {
              progress = 0;
              it.all() = Color::BLACK;
              ESP_LOGD(TAG, "initial run");
            }
            else {
              //yellow led appear at the end of strip and rising up
              if (progress < it.size()) {
                progress++;
                it[it.size() - progress] = mYellow;
                ESP_LOGD(TAG, "increas progress : %d", progress);
              }
              //when all leds get yellow light, do nothing
              else {
                }
            };
            
      - addressable_lambda:
          name: "Simple light"
          update_interval: 10000ms
          lambda: |-
            static auto TAG = "Simple light";
            static uint16_t progress = 0;
            static ESPHSVColor mhsv;
            static ESPHSVColor mYellow = ESPHSVColor(40, 255, 255);
            if (initial_run) {
              progress = 0;
              it.all() = mYellow.to_rgb();
              mhsv = mYellow;
              ESP_LOGD(TAG, "initial mhsv.hue is: %d", mhsv.hue);
            }
            else {
              //strip change hue a litle, light blink effect when motion detected within occupied interval
              if (progress < 5) {
                mhsv.hue += 3;
                it.all() = mhsv.to_rgb();
                progress++;
                //ESP_LOGD(TAG, "increas mhsv.hue : %d", mhsv.hue);
              }
              //set hue to initial value
              else if (progress < 10) {
                mhsv.hue -= 3;
                it.all() = mhsv.to_rgb();
                progress++;
                //ESP_LOGD(TAG, "next progress : %d", progress);
              }                  
              else if (progress == 10) {
                it.all() = mYellow.to_rgb();
                progress++;
                }
              else {
              
              }
            };  

  - platform: monochromatic
    internal: true
    output: pca00
    id: pwm00
  - platform: monochromatic
    internal: true
    output: pca01
    id: pwm01
  - platform: monochromatic
    internal: true
    output: pca02
    id: pwm02
  - platform: monochromatic
    internal: true
    output: pca03
    id: pwm03
  - platform: monochromatic
    internal: true
    output: pca04
    id: pwm04
  - platform: monochromatic
    internal: true
    output: pca05
    id: pwm05
  - platform: monochromatic
    internal: true
    output: pca06
    id: pwm06
  - platform: monochromatic
    internal: true
    output: pca07
    id: pwm07
  - platform: monochromatic
    internal: true
    output: pca08
    id: pwm08
  - platform: monochromatic
    internal: true
    output: pca09
    id: pwm09
  - platform: monochromatic
    internal: true
    output: pca10
    id: pwm10
  - platform: monochromatic
    internal: true
    output: pca11
    id: pwm11
  - platform: monochromatic
    internal: true
    output: pca12
    id: pwm12
  - platform: monochromatic
    internal: true
    output: pca13
    id: pwm13
  - platform: monochromatic
    internal: true
    output: pca14
    id: pwm14
  - platform: monochromatic
    internal: true
    output: pca15
    id: pwm15

binary_sensor:

  - platform: gpio
    name: "MCP23008 Input 4"
    pin:
      mcp23xxx: mcp23008_hub
      # Use pin number 0
      number: 0
      # One of INPUT or INPUT_PULLUP
      mode:
        input: true
      inverted: true
  - platform: gpio
    name: "MCP23008 Input 3"
    pin:
      mcp23xxx: mcp23008_hub
      # Use pin number 1
      number: 1
      # One of INPUT or INPUT_PULLUP
      mode:
        input: true
      inverted: true
  - platform: gpio
    name: "MCP23008 Input 2"
    pin:
      mcp23xxx: mcp23008_hub
      # Use pin number 2
      number: 2
      # One of INPUT or INPUT_PULLUP
      mode:
        input: true
      inverted: true
  - platform: gpio
    name: "MCP23008 Input 1"
    pin:
      mcp23xxx: mcp23008_hub
      # Use pin number 3
      number: 3
      # One of INPUT or INPUT_PULLUP
      mode:
        input: true
      inverted: true
  - platform: gpio
    name: "MCP23008 en"
    pin:
      mcp23xxx: mcp23008_hub
      # Use pin number 4
      number: 4
      # One of INPUT or INPUT_PULLUP
      mode:
        input: true
  - platform: gpio
    name: "ESP32 Input 1"
    pin:
      number: 4
      mode:
        input: true
      inverted: true
  - platform: gpio
    name: "ESP32 Input 2"
    pin:
      number: 17
      mode:
        input: true
      inverted: true
  - platform: gpio
    name: "ESP32 Input 3"
    pin:
      number: 18
      mode:
        input: true
      inverted: true
  - platform: gpio
    name: "ESP32 Input 4"
    pin:
      number: 19
      mode:
        input: true
      inverted: true
  - platform: gpio
    name: "ESP32 oe"
    pin:
      number: 23
      mode:
        input: true
        pullup: true
      